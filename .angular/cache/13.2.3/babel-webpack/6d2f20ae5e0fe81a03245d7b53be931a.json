{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { ChangeDetectionStrategy, Component, Inject, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\nimport { take } from 'rxjs/operators';\nlet ContentModalComponent = class ContentModalComponent {\n  constructor(dialogRef, data, ngZone, service, sanitizer) {\n    this.dialogRef = dialogRef;\n    this.data = data;\n    this.ngZone = ngZone;\n    this.service = service;\n    this.sanitizer = sanitizer;\n    this.charCount = 0;\n    this.dataText = \"\";\n  }\n\n  ngOnInit() {\n    this.title = this.sanitizer.bypassSecurityTrustHtml(this.service.ParseHtmlColorCodes(this.data.name));\n    this.dataText = this.data.desc;\n  }\n\n  triggerDescriptionResize() {\n    // Wait for changes to be applied, then trigger textarea resize.\n    this.ngZone.onStable.pipe(take(1)).subscribe(() => this.autosize.resizeToFitContent(true));\n  }\n\n  sendToServer(command) {\n    this.data.desc = this.dataText;\n\n    if (this.data.type == \"description\") {\n      this.data['type'] = \"description\";\n    } else {\n      this.data['type'] = \"book\";\n    }\n\n    this.service.saveContent(JSON.stringify(this.data));\n    this.dialogRef.close();\n  }\n\n  isContainer(type) {\n    return type === 'Container';\n  }\n\n  canOpen(canOpen) {\n    console.log(\"can open \", canOpen);\n    return canOpen === 'True';\n  }\n\n  isOpen(isOpen) {\n    return isOpen;\n  }\n\n};\n\n__decorate([ViewChild('autosize', {\n  static: true\n})], ContentModalComponent.prototype, \"autosize\", void 0);\n\nContentModalComponent = __decorate([Component({\n  selector: 'app-context-modal',\n  templateUrl: './content-modal.component.html',\n  styleUrls: ['./content-modal.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n}), __param(1, Inject(MAT_DIALOG_DATA))], ContentModalComponent);\nexport { ContentModalComponent };","map":null,"metadata":{},"sourceType":"module"}