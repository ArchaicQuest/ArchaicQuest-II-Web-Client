{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createEdgeCompoundProgram = exports.AbstractEdgeProgram = void 0;\n/**\n * Sigma.js WebGL Abstract Edge Program\n * =====================================\n *\n * @module\n */\n\nvar program_1 = require(\"./program\");\n/**\n * Edge Program class.\n *\n * @constructor\n */\n\n\nvar AbstractEdgeProgram =\n/** @class */\nfunction (_super) {\n  __extends(AbstractEdgeProgram, _super);\n\n  function AbstractEdgeProgram(gl, vertexShaderSource, fragmentShaderSource, points, attributes) {\n    return _super.call(this, gl, vertexShaderSource, fragmentShaderSource, points, attributes) || this;\n  }\n\n  return AbstractEdgeProgram;\n}(program_1.AbstractProgram);\n\nexports.AbstractEdgeProgram = AbstractEdgeProgram;\n\nfunction createEdgeCompoundProgram(programClasses) {\n  return (\n    /** @class */\n    function () {\n      function EdgeCompoundProgram(gl, renderer) {\n        this.programs = programClasses.map(function (ProgramClass) {\n          return new ProgramClass(gl, renderer);\n        });\n      }\n\n      EdgeCompoundProgram.prototype.bufferData = function () {\n        this.programs.forEach(function (program) {\n          return program.bufferData();\n        });\n      };\n\n      EdgeCompoundProgram.prototype.allocate = function (capacity) {\n        this.programs.forEach(function (program) {\n          return program.allocate(capacity);\n        });\n      };\n\n      EdgeCompoundProgram.prototype.bind = function () {// nothing todo, it's already done in each program constructor\n      };\n\n      EdgeCompoundProgram.prototype.computeIndices = function () {\n        this.programs.forEach(function (program) {\n          return program.computeIndices();\n        });\n      };\n\n      EdgeCompoundProgram.prototype.render = function (params) {\n        this.programs.forEach(function (program) {\n          program.bind();\n          program.bufferData();\n          program.render(params);\n        });\n      };\n\n      EdgeCompoundProgram.prototype.process = function (sourceData, targetData, data, hidden, offset) {\n        this.programs.forEach(function (program) {\n          return program.process(sourceData, targetData, data, hidden, offset);\n        });\n      };\n\n      return EdgeCompoundProgram;\n    }()\n  );\n}\n\nexports.createEdgeCompoundProgram = createEdgeCompoundProgram;","map":null,"metadata":{},"sourceType":"script"}