{"ast":null,"code":"// Licensed to the .NET Foundation under one or more agreements.\n// The .NET Foundation licenses this file to you under the MIT license.\n// Not exported from index\n\n/** @private */\nexport class TextMessageFormat {\n  static write(output) {\n    return `${output}${TextMessageFormat.RecordSeparator}`;\n  }\n\n  static parse(input) {\n    if (input[input.length - 1] !== TextMessageFormat.RecordSeparator) {\n      throw new Error(\"Message is incomplete.\");\n    }\n\n    const messages = input.split(TextMessageFormat.RecordSeparator);\n    messages.pop();\n    return messages;\n  }\n\n}\nTextMessageFormat.RecordSeparatorCode = 0x1e;\nTextMessageFormat.RecordSeparator = String.fromCharCode(TextMessageFormat.RecordSeparatorCode); //# sourceMappingURL=TextMessageFormat.js.map","map":null,"metadata":{},"sourceType":"module"}