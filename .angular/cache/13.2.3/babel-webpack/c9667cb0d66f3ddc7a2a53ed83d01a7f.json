{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/autocomplete\";\nimport * as i2 from \"@angular/forms\";\nexport let TabDirective = /*#__PURE__*/(() => {\n  class TabDirective {\n    constructor(autoTrigger, control) {\n      this.autoTrigger = autoTrigger;\n      this.control = control;\n    }\n\n    onBlur() {\n      if (this.autoTrigger.activeOption) {\n        this.autoTrigger.writeValue(this.autoTrigger.activeOption.value); //this.autoTrigger._handleFocus();\n      }\n    }\n\n    ngAfterViewInit() {\n      this.observable = this.autoTrigger.panelClosingActions.subscribe(x => {\n        if (this.autoTrigger.activeOption) {\n          const value = this.autoTrigger.activeOption.value;\n          if (this.control) this.control.control.setValue(value, {\n            emit: false\n          });\n          this.autoTrigger.writeValue(value);\n        }\n      });\n    }\n\n  }\n\n  TabDirective.ɵfac = function TabDirective_Factory(t) {\n    return new (t || TabDirective)(i0.ɵɵdirectiveInject(i1.MatAutocompleteTrigger, 8), i0.ɵɵdirectiveInject(i2.NgControl, 8));\n  };\n\n  TabDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: TabDirective,\n    selectors: [[\"\", \"tab-directive\", \"\"]],\n    hostBindings: function TabDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown.tab\", function TabDirective_keydown_tab_HostBindingHandler() {\n          return ctx.onBlur();\n        });\n      }\n    }\n  });\n  return TabDirective;\n})();","map":null,"metadata":{},"sourceType":"module"}