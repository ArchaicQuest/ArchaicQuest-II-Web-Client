{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.cubicInOut = exports.cubicOut = exports.cubicIn = exports.quadraticInOut = exports.quadraticOut = exports.quadraticIn = exports.linear = void 0;\n/**\n * Sigma.js Easings\n * =================\n *\n * Handy collection of easing functions.\n * @module\n */\n\nvar linear = function (k) {\n  return k;\n};\n\nexports.linear = linear;\n\nvar quadraticIn = function (k) {\n  return k * k;\n};\n\nexports.quadraticIn = quadraticIn;\n\nvar quadraticOut = function (k) {\n  return k * (2 - k);\n};\n\nexports.quadraticOut = quadraticOut;\n\nvar quadraticInOut = function (k) {\n  if ((k *= 2) < 1) return 0.5 * k * k;\n  return -0.5 * (--k * (k - 2) - 1);\n};\n\nexports.quadraticInOut = quadraticInOut;\n\nvar cubicIn = function (k) {\n  return k * k * k;\n};\n\nexports.cubicIn = cubicIn;\n\nvar cubicOut = function (k) {\n  return --k * k * k + 1;\n};\n\nexports.cubicOut = cubicOut;\n\nvar cubicInOut = function (k) {\n  if ((k *= 2) < 1) return 0.5 * k * k * k;\n  return 0.5 * ((k -= 2) * k * k + 2);\n};\n\nexports.cubicInOut = cubicInOut;\nvar easings = {\n  linear: exports.linear,\n  quadraticIn: exports.quadraticIn,\n  quadraticOut: exports.quadraticOut,\n  quadraticInOut: exports.quadraticInOut,\n  cubicIn: exports.cubicIn,\n  cubicOut: exports.cubicOut,\n  cubicInOut: exports.cubicInOut\n};\nexports.default = easings;","map":null,"metadata":{},"sourceType":"script"}